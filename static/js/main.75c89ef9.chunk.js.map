{"version":3,"sources":["components/LoginForm/LoginForm.module.css","store/favoritesSlice.js","api/apiGetVideo.js","store/videoSlice.js","components/Logo.jsx","store/userSlice.js","components/Header/Header.jsx","components/LoginForm/LoginForm.jsx","components/FavoritesForm/FavoritesForm.jsx","components/VideoListTitle/VideoListTitle.jsx","components/VideoCard/VideoCard.jsx","components/VideoList/VideoList.jsx","components/VideoList/VideoListTable.jsx","screens/FavoriteScreens/FavoriteScreens.jsx","screens/SearchScreen/SearchScreen.jsx","screens/LoginScreen/LoginScreen.jsx","api/login.js","router/index.js","router/useRouteGuard.js","App.js","store/index.js","index.js","components/VideoListTitle/VideoListTitle.module.css","components/VideoCard/VideoCard.module.css"],"names":["module","exports","favoritesSlice","createSlice","name","initialState","favorites","reducers","setFavorites","state","action","payload","favorite","query","title","id","order","resultsPerPage","push","localStorage","setItem","username","JSON","stringify","setSavedFavorites","editFavorite","map","item","deleteFavoriteItem","filter","logOutFavotite","actions","KEY","instance","axios","create","baseURL","params","part","key","q","maxResults","getVideos","a","get","data","getVideosStats","videoId","searchVideos","createAsyncThunk","response","searchVideosStats","videoSlice","videos","status","statusStats","isGrid","addVideos","setSearchQuery","setIsGrid","setIsNotGrid","logOut","totalCount","isLoading","total","videoIdList","extraReducers","pending","rejected","fulfilled","items","pageInfo","totalResults","forEach","video","idx","arr","length","viewCount","el","statistics","getVideoThunk","Logo","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","userSlice","isLoggedIn","getItem","setUsername","setIsLoggedIn","logOutUser","setUser","Header","reduxDispatch","useDispatch","align","wrap","flex","mode","Item","style","marginTop","to","borderColor","onClick","removeItem","marginLeft","LoginForm","onSubmit","initialValues","className","styles","wrapper","labelCol","span","wrapperCol","form","layout","onFinish","inputWrapper","label","rules","required","message","Password","offset","type","htmlType","Option","Select","FavoritesForm","onCancel","changeFavoriteTitle","changeFavoriteResultsPerPage","editMode","Form","useForm","buttonTexts","useMemo","cancelBtn","okBtn","useEffect","resetFields","preserve","disabled","placeholder","onChange","hasFeedback","value","min","max","VideoListTitle","search","useSelector","youtubeSearch","listname","listnameleft","listnametext","listnamequery","listnametotalcount","listnameright","listicons","listiconsItem","UnorderedListOutlined","AppstoreOutlined","numFormatter","Intl","NumberFormat","VideoCard","description","videocontainer","src","aboutvideo","videotitle","videodescripton","Number","format","Math","round","VideoList","itemLayout","dataSource","renderItem","snippet","VideoListTable","Meta","Card","grid","gutter","xs","sm","md","lg","xl","xxl","hoverable","cover","confirm","Modal","FavoritesScreen","routeHistory","useHistory","user","useState","isModalVisible","setIsModalVisible","activeItem","setActiveItem","makeSearch","searchInput","element","justify","flexWrap","editLink","deleteLink","Paragraph","itemTitle","margin","cursor","ellipsis","rows","expandable","content","Text","display","marginBottom","okText","cancelText","icon","ExclamationCircleOutlined","onOk","visible","closable","footer","textAlign","fontSize","padding","values","Search","Input","SearchScreen","isModalOpen","setModalOpen","setQuery","suffix","HeartOutlined","color","minHeight","enterButton","size","onSearch","e","target","uuidV4","saveToFavorites","LoginScreen","maxWidth","password","users","find","token","login","error","RouterView","pathname","useLocation","useRouteGuard","exact","path","component","FavoriteScreens","App","parse","background","Content","configureStore","reducer","ReactDOM","render","store","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.75c89ef9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginForm_wrapper__3RCLu\",\"form\":\"LoginForm_form__1FEZA\",\"inputWrapper\":\"LoginForm_inputWrapper__1HwU6\"};","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  favorites: [],\n};\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    setFavorites(state, action) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n\n      state.favorites.push(favorite);\n      localStorage.setItem(action.payload.username, JSON.stringify(state.favorites));\n    },\n    setSavedFavorites(state, action) {\n      state.favorites = action.payload;\n    },\n    editFavorite(state, action) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n      state.favorites = state.favorites.map(item => {\n        return item.id === favorite.id ? favorite : item;\n      });\n    },\n    deleteFavoriteItem(state, action) {\n      state.favorites = state.favorites.filter(item => item.id !== action.payload.id);\n    },\n    logOutFavotite(state) {\n      state.favorites = [];\n    },\n  },\n});\n\nexport const {\n  setFavorites,\n  setSavedFavorites,\n  editFavorite,\n  deleteFavoriteItem,\n  logOutFavotite } = favoritesSlice.actions;\nexport default favoritesSlice.reducer;\n","import axios from 'axios';\n\nconst KEY = 'AIzaSyBw00rbu07aXzi_-_uNqvohVEJBkD-YDSY';\n\nconst instance = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3/',\n  params: {\n    part: 'snippet',\n    key: KEY,\n    q: '',\n    maxResults: 12,\n    order: 'viewCount',\n    resultsPerPage: 12,\n  },\n});\n\nexport const getVideos = async (params) => {\n  const { data } = await instance.get('/search', {\n    params,\n  });\n  return data;\n};\n\nexport const getVideosStats = async (videoId) => {\n  const { data } = await axios.get(`https://www.googleapis.com/youtube/v3/videos?key=${KEY}&fields=items(snippet(title,channelTitle,publishedAt),id,statistics(viewCount))&part=snippet,statistics&id=${videoId}`);\n\n  return data;\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getVideos, getVideosStats } from '../api/apiGetVideo';\n\nexport const searchVideos = createAsyncThunk(\n  'youtubeSearch/searchVideos',\n  async (params) => {\n    try {\n      const response = await getVideos(params);\n      return response;\n    } catch (err) {\n      return err;\n    }\n  },\n);\n\nexport const searchVideosStats = createAsyncThunk(\n  'youtubeSearch/getVideosStats',\n  async (videoId) => {\n    try {\n      const response = await getVideosStats(videoId);\n      return response;\n    } catch (err) {\n      return err;\n    }\n  },\n);\n\nconst videoSlice = createSlice({\n  name: 'youtubeSearch',\n\n  initialState: {\n    videos: [],\n    status: null,\n    statusStats: null,\n    query: '',\n    isGrid: true,\n  },\n\n  reducers: {\n    addVideos(state, action) {\n      state.videos = action.payload;\n    },\n    setSearchQuery(state, action) {\n      state.query = action.payload.query;\n    },\n    setIsGrid(state) {\n      state.isGrid = true;\n    },\n    setIsNotGrid(state) {\n      state.isGrid = false;\n    },\n    logOut(state) {\n      state.videos = [];\n      state.totalCount = 0;\n      state.status = null;\n      state.statusStats = null;\n      state.isLoading = false;\n      state.query = '';\n      state.isGrid = true;\n      state.total = 0;\n      state.videoIdList = '';\n    },\n  },\n\n  extraReducers: {\n    [searchVideos.pending]: (state) => {\n      state.status = 'pending';\n    },\n    [searchVideos.rejected]: (state, action) => {\n      state.status = 'rejected';\n    },\n    [searchVideos.fulfilled]: (state, action) => {\n      state.status = 'fullfiled';\n      state.videos = action.payload.items;\n      state.total = action.payload.pageInfo.totalResults;\n      state.videoIdList = '';\n      state.videos.forEach((video, idx, arr) => {\n        idx < arr.length - 1 ? state.videoIdList += (video.id.videoId + ',') : state.videoIdList += video.id.videoId;\n      });\n    },\n    [searchVideosStats.pending]: (state) => {\n      state.statusStats = 'pending';\n    },\n    [searchVideosStats.rejected]: (state, action) => {\n      state.statusStats = 'rejected';\n    },\n    [searchVideosStats.fulfilled]: (state, action) => {\n      state.statusStats = 'fullfiled';\n      state.videos.map(video => {\n        video.viewCount = action.payload.items.filter(el => el.id === video.id.videoId)[0]?.statistics.viewCount;\n        return video;\n      });\n    },\n  },\n},\n\n);\n\nexport const {\n  addVideos,\n  getVideoThunk,\n  setSearchQuery,\n  setIsGrid,\n  setIsNotGrid,\n  logOut,\n} = videoSlice.actions;\n\nexport default videoSlice.reducer;\n","export const Logo = ({\n  width = 88,\n  height = 88,\n}) => {\n  return (<svg\n    width={width}\n    height={height}\n    viewBox=\"0 0 88 88\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 43.5667L24.683 60.9559V79.399L59.1488 62.0098V43.5667Z\"\n      fill=\"#1390E5\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M24.683 26.1787L59.1487 43.5679V62.0111L24.683 44.6218V26.1787Z\"\n      fill=\"#1180CB\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 8.79071L24.683 26.1799V44.623L59.1488 27.2338V8.79071Z\"\n      fill=\"#35A2EC\"\n    />\n  </svg>);\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: 'user',\n\n  initialState: {\n    username: '',\n    isLoggedIn: !!localStorage.getItem('authToken'),\n  },\n\n  reducers: {\n    setUsername(state, action) {\n      state.username = action.payload;\n    //  console.log(action.payload);\n    },\n    setIsLoggedIn(state,action){\n      state.isLoggedIn = action.payload;\n    },\n    logOutUser(state) {\n      state.username = '';\n      state.isLoggedIn = false;\n    },\n  },\n},\n\n);\n\nexport const {\n  setUser,\n  setIsLoggedIn,\n  setUsername,\n  logOutUser,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Menu, Row, Col } from 'antd';\nimport { setIsLoggedIn, logOutUser } from '../../store/userSlice';\nimport { logOut } from '../../store/videoSlice';\nimport { logOutFavotite } from '../../store/favoritesSlice';\nimport { Logo } from '../Logo';\n\nexport const Header = () => {\n  const reduxDispatch = useDispatch();\n\n  const handleLoginOut = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('authUser');\n    reduxDispatch(logOut());\n    reduxDispatch(logOutUser());\n    reduxDispatch(logOutFavotite());\n    reduxDispatch(setIsLoggedIn(false));\n  };\n\n  return (\n    <Row\n      align=\"middle\"\n      wrap={false}\n    >\n      <Col flex='auto'>\n        <Menu mode=\"horizontal\">\n          <Menu.Item\n            key=\"1\"\n            style={{ marginTop: '10px' }} >\n            <NavLink to='/'><Logo\n              width={35}\n              height={35} /></NavLink>\n          </Menu.Item>\n\n          <Menu.Item key=\"2\" >\n            <NavLink\n              to='/'>Поиск</NavLink>\n          </Menu.Item>\n\n          <Menu.Item key=\"3\" >\n            <NavLink to='/favourite'>Избранное</NavLink>\n          </Menu.Item>\n        </Menu>\n      </Col>\n      <Col flex='none'>\n        <Menu\n          mode='horizontal'\n          style={{ borderColor: 'transparent' }}\n        >\n          <Menu.Item\n            key=\"4\"\n            onClick={handleLoginOut}\n            style={{ marginLeft: '250px' }}>\n            <NavLink to='/login'>Выйти</NavLink>\n          </Menu.Item>\n        </Menu>\n      </Col>\n    </Row >\n  );\n};\n\nexport default Header;\n","import { Form, Input, Button } from 'antd';\nimport { Logo } from '../Logo';\n\nimport styles from './LoginForm.module.css';\n\nexport const LoginForm = ({\n  onSubmit,\n  initialValues,\n}) => {\n  return (\n    <div className={styles.wrapper}>\n      <Logo />\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 24 }}\n        className={styles.form}\n        initialValues={initialValues}\n        layout=\"vertical\"\n        onFinish={onSubmit}\n      >\n        <div className={styles.inputWrapper}>\n          <Form.Item\n            label=\"Логин\"\n            name=\"username\"\n            rules={[{ required: true, message: 'Введите ваше имя' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Пароль\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Введите пароль' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n        </div>\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            Войти\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import * as React from 'react';\nimport { useMemo, useEffect } from 'react';\nimport { Form, Input, Button, Select, Slider, Row, Col } from 'antd';\n\nconst { Option } = Select;\n\nexport const FavoritesForm = ({\n  initialValues,\n  onCancel,\n  onSubmit,\n  changeFavoriteTitle,\n  changeFavoriteResultsPerPage,\n  editMode = false,\n}) => {\n  const [form] = Form.useForm();\n  const buttonTexts = useMemo(() => {\n    return editMode ? { cancelBtn: 'Не изменять', okBtn: 'Изменить' } : { cancelBtn: 'Не сохранять', okBtn: 'Сохранить' };\n  }, [editMode]);\n\n  useEffect(() => form.resetFields(), [form, initialValues]);\n\n  return (\n    <Form\n      form={form}\n      name=\"saveForm\"\n      id=\"saveForm\"\n      onFinish={onSubmit}\n      initialValues={initialValues}\n      preserve={false}\n    >\n      <Form.Item\n        name=\"query\"\n        label=\"Запрос\"\n      >\n        <Input disabled={!editMode} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"title\"\n        label=\"Название\"\n      >\n        <Input\n          placeholder=\"Укажите название\"\n          onChange={changeFavoriteTitle} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"order\"\n        label=\"Сортировать по\"\n        hasFeedback\n        rules={[{ required: true, message: 'Сортировать по...' }]}\n      >\n        <Select placeholder=\"Без сортировки\">\n          <Option value=\"date\">По дате</Option>\n          <Option value=\"rating\">По рейтингу</Option>\n          <Option value=\"relevance\">По актуальности</Option>\n          <Option value=\"title\">По заголовку</Option>\n          <Option value=\"videoCount\">По количеству видео</Option>\n          <Option value=\"viewCount\">По количеству просмотров</Option>\n        </Select>\n      </Form.Item>\n\n      <span >Максимальное количество</span>\n      <Row align='middle'>\n        <Col flex='auto'>\n          <Form.Item name=\"resultsPerPage\" >\n            <Slider\n              min={12}\n              max={50}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Button onClick={onCancel}>\n        {buttonTexts.cancelBtn}\n      </Button>\n\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n      >\n        {buttonTexts.okBtn}\n      </Button>\n    </Form>\n  );\n};\n\nexport default FavoritesForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { UnorderedListOutlined, AppstoreOutlined } from '@ant-design/icons';\nimport { setIsGrid, setIsNotGrid } from '../../store/videoSlice';\n\nimport styles from './VideoListTitle.module.css';\n\nexport const VideoListTitle = () => {\n\n  const reduxDispatch = useDispatch();\n  const search = useSelector((state) => state.youtubeSearch);\n\n  let query = search.query;\n  let total = search.total;\n\n  return (\n    <div>\n      <div className={styles.listname}>\n        <div className={styles.listnameleft}>\n          <div className={styles.listnametext}>Видео по запросу</div>\n          <div className={styles.listnamequery}>{query}</div>\n          <div className={styles.listnametotalcount}>{total}</div>\n        </div>\n        <div className={styles.listnameright}>\n          <div className={styles.listicons}>\n            <div\n              className={styles.listiconsItem}\n              onClick={() => { reduxDispatch(setIsGrid()); }}\n            > <UnorderedListOutlined />\n            </div>\n            <div\n              className={styles.listiconsItem}\n              onClick={() => { reduxDispatch(setIsNotGrid()); }}\n            ><AppstoreOutlined />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoListTitle;\n","import styles from './VideoCard.module.css';\n\nconst numFormatter = new Intl.NumberFormat('ru');\n\nexport const VideoCard = ({\n  videoId,\n  title,\n  description,\n  viewCount,\n}) => {\n\n  return (\n    <div>\n      <div className={styles.videocontainer}>\n        <iframe\n          title={videoId}\n          src={`https://www.youtube.com/embed/${videoId}`}></iframe>\n        <div className={styles.aboutvideo}>\n          <div className={styles.videotitle}>{title}</div>\n          <div className={styles.videodescripton}>{description}</div>\n          <div className={styles.videodescripton}>\n            {Number(viewCount) / 1000 >= 1 ?\n              `${numFormatter.format(Math.round(Number(viewCount) / 1000))} просмотров` :\n              `${viewCount} просмотров`}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoCard;\n","import { List } from 'antd';\r\nimport VideoCard from '../VideoCard/VideoCard';\r\n\r\nexport const VideoList = ({\r\n  videos,\r\n  resultsPerPage,\r\n}) => {\r\n\r\n  return (\r\n    <div>\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={videos}\r\n        renderItem={item => (\r\n          <List.Item>\r\n            <VideoCard\r\n              videoId={item.id.videoId}\r\n              title={item.snippet.title}\r\n              description={item.snippet.description}\r\n              viewCount={item.viewCount}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n","import { List, Card } from 'antd';\n\nexport const VideoListTable = ({\n  videos,\n  resultsPerPage,\n}) => {\n  const { Meta } = Card;\n  return (\n    <div>\n      <List\n        itemLayout='vertical'\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 1,\n          md: 2,\n          lg: 3,\n          xl: 3,\n          xxl: 3,\n        }}\n        dataSource={videos}\n        renderItem={item => (\n          <List.Item>\n            <Card\n              hoverable\n              style={{ width: 300 }}\n              cover={<iframe\n                title={item.id.videoId}\n                src={`https://www.youtube.com/embed/${item.id.videoId}`}></iframe>}\n            >\n              <Meta\n                title={item.snippet.title}\n                description={item.snippet.description} />\n            </Card>,\n          </List.Item>\n        )}\n      />\n    </div >\n  );\n};\n\nexport default VideoListTable;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { List, Typography, Row, Col, Modal, Empty } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { editFavorite, deleteFavoriteItem } from '../../store/favoritesSlice';\nimport { setSearchQuery, searchVideos } from '../../store/videoSlice';\nimport { FavoritesForm } from '../../components';\nimport styles from './FavoritesScreen.module.css';\n\nconst { confirm } = Modal;\n\nexport const FavoritesScreen = () => {\n  const reduxDispatch = useDispatch();\n  const routeHistory = useHistory();\n  const username = useSelector(state => state.user.username);\n  const { favorites } = useSelector(state => state.favorites);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [activeItem, setActiveItem] = useState({\n    id: '',\n    title: '',\n    query: '',\n    order: 'relevance',\n    resultsPerPage: 12,\n  });\n  useEffect(() => {\n    if (favorites.length) {\n      localStorage.setItem(username, JSON.stringify([...favorites]));\n    }\n  }, [favorites, username]);\n\n  const onEditFavorite = (values) => {\n    reduxDispatch(editFavorite({ ...values, username, id: activeItem.id }));\n    setIsModalVisible(false);\n  };\n\n  const showConfirm = (title, id) => {\n    reduxDispatch(deleteFavoriteItem({ id }));\n  };\n\n  const showConfirmOpenQuery = (favorite) => {\n    confirm({\n      title: 'Выполнть запрос ?',\n      content:\n        <>\n          <Typography.Text style={{ display: 'block', marginBottom: 5 }}>{favorite.title}</Typography.Text>\n        </>,\n      okText: 'Выполнить',\n      cancelText: 'Отмена',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        makeSearch(favorite.id);\n      },\n    });\n  };\n\n  const makeSearch = (id) => {\n    const searchInput = favorites.filter(element => element.id === id)[0];\n    reduxDispatch(setSearchQuery({ query: searchInput.query }));\n    reduxDispatch(searchVideos({\n      q: searchInput.query,\n      order: searchInput.order ? searchInput.order : 'relevance',\n      resultsPerPage: searchInput.resultsPerPage,\n      maxResults: searchInput.resultsPerPage,\n    }));\n\n    routeHistory.push('/');\n\n  };\n\n  return (\n    <>\n      <Row\n        justify=\"center\"\n      >\n        <Col\n          xs={{ span: 23 }}\n          sm={{ span: 22 }}\n          md={{ span: 22 }}\n          lg={{ span: 20 }}\n          xxl={{ span: 16 }}\n        >\n          <h2> Избранное</h2>\n          {!favorites.length ?\n            <Row\n              justify=\"center\"\n            >\n              <Col flex='auto'>\n                <Empty description='У Вас нет сохраненных запросов' />\n              </Col>\n            </Row> :\n            (\n              <List\n                dataSource={favorites}\n                renderItem={item => (\n                  <List.Item\n                    key={item.id}\n                    style={{ flexWrap: 'nowrap' }}\n                    actions={[\n                      <a\n                        className={styles.editLink}\n                        key=\"list-loadmore-edit\"\n                        onClick={() => {\n                          setActiveItem(favorites.filter(el => el.id === item.id)[0]);\n                          setIsModalVisible(true);\n                        }}\n                      >\n                        Изменить\n                      </a>,\n                      <a\n                        className={styles.deleteLink}\n                        key=\"list-loadmore-more\"\n                        onClick={() => showConfirm(item.query, item.id)}\n                      >\n                        Удалить\n                      </a>,\n                    ]}\n                  >\n                    <Typography.Paragraph\n                      className={styles.itemTitle}\n                      style={{ margin: 0, cursor: 'pointer' }}\n                      ellipsis={{ rows: 1, expandable: false }}\n                      onClick={() => showConfirmOpenQuery(item)}\n                    >\n                      {item.query}\n                    </Typography.Paragraph>\n                  </List.Item>\n                )}\n              />\n            )\n\n          }\n        </Col>\n      </Row>\n\n      <Modal\n        title={null}\n        visible={isModalVisible}\n        closable={false}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n      >\n        <h3\n          style={{\n            textAlign: 'center',\n            fontSize: 18,\n            margin: 0,\n            padding: '15px 0 35px',\n          }}\n        >\n          Изменить запрос\n        </h3>\n        <FavoritesForm\n          initialValues={{\n            id: activeItem.id,\n            title: activeItem.title,\n            query: activeItem.query,\n            order: activeItem.order,\n            resultsPerPage: activeItem.resultsPerPage,\n          }}\n          editMode={true}\n          onSubmit={onEditFavorite}\n          onCancel={() => setIsModalVisible(false)}\n        />\n      </Modal>\n    </>\n  );\n};\nexport default FavoritesScreen;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidV4 } from 'uuid';\nimport { Input, Modal, Row, Col } from 'antd';\nimport { HeartOutlined } from '@ant-design/icons';\nimport { setSearchQuery, searchVideos, searchVideosStats } from '../../store/videoSlice';\nimport { setFavorites } from '../../store/favoritesSlice';\nimport { FavoritesForm, VideoListTitle, VideoListTable, VideoList } from '../../components';\n\nconst { Search } = Input;\n\nfunction SearchScreen() {\n  const reduxDispatch = useDispatch();\n\n  const search = useSelector((state) => state.youtubeSearch);\n  const username = useSelector(state => state.user.username);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [query, setQuery] = useState('');\n  let videos = search.videos;\n  let status = search.status;\n\n  const makeSearch = async () => {\n    if (!query) {\n      return;\n    }\n    reduxDispatch(setSearchQuery({ query }));\n    await reduxDispatch(searchVideos({ q: query }));\n  };\n\n  useEffect(() => {\n    if (search.status !== 'fullfiled') return;\n    reduxDispatch(searchVideosStats(search.videoIdList));\n  }, [reduxDispatch, search.status, search.videoIdList]);\n\n  const suffix = (\n    <HeartOutlined\n      style={{\n        fontSize: 16,\n        color: '#1890ff',\n        cursor: 'pointer',\n      }}\n      onClick={() => setModalOpen(true)}\n    />\n  );\n\n  const saveToFavorites = (values) => {\n    const id = uuidV4();\n    reduxDispatch(setFavorites({ ...values, username, id }));\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{ minHeight: '80vh' }}\n      >\n        <Col\n          xs={{ span: 23 }}\n          sm={{ span: 22 }}\n          md={{ span: 22 }}\n          lg={{ span: 20 }}\n          xxl={{ span: 16 }}\n        >\n          <Search\n            placeholder={search.query ? search.query : 'Что хотите посмотреть?'}\n            enterButton=\"Найти\"\n            size=\"large\"\n            onSearch={makeSearch}\n            suffix={search.query ? suffix : null}\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n          />\n\n          {(status === 'fullfiled' && search.isGrid) ? (\n            <div>\n              <VideoListTitle />\n              <VideoList\n                videos={videos}\n                resultsPerPage={12}\n              />\n            </div>) : (\n            (status === 'fullfiled' && !search.isGrid) ? (\n              <div>\n                <VideoListTitle />\n                <VideoListTable\n                  videos={videos}\n                  resultsPerPage={12}\n                />\n              </div>) : null\n          )}\n\n        </Col>\n      </Row>\n      <Modal\n        title=\"Сохранить запрос\"\n        visible={isModalOpen}\n        footer={null}\n        onCancel={() => setModalOpen(false)}\n      >\n        <FavoritesForm\n          initialValues={{\n            id: '',\n            title: '',\n            query,\n            order: 'relevance',\n            resultsPerPage: 12,\n          }}\n          onCancel={() => setModalOpen(false)}\n          onSubmit={(values) => saveToFavorites(values)}\n        />\n      </Modal>\n\n    </>\n  );\n}\n\nexport default SearchScreen;\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Col, Row, message } from 'antd';\nimport { LoginForm } from '../../components';\nimport { login } from '../../api/login';\nimport { setIsLoggedIn, setUsername } from '../../store/userSlice';\n\nfunction LoginScreen() {\n\n  const routeHistory = useHistory();\n  const reduxDispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const user = login(data);\n\n    if (!user) {\n      message.error('Ошибка авторизации');\n      localStorage.removeItem('authToken');\n      reduxDispatch(setIsLoggedIn(false));\n      return;\n    }\n\n    localStorage.setItem('authToken', user.token);\n    localStorage.setItem('authUser', user.username);\n    reduxDispatch(setIsLoggedIn(true));\n    reduxDispatch(setUsername(user.username));\n    routeHistory.push('/');\n  };\n\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{ height: '100vh' }}\n    >\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 22 }}\n        md={{ span: 22 }}\n        lg={{ span: 20 }}\n        xxl={{ span: 16 }}\n        style={{ maxWidth: 510 }}\n      >\n        <LoginForm\n          initialValues={{ username: '', password: '' }}\n          onSubmit={onSubmit} />\n      </Col>\n    </Row>\n  );\n}\n\nexport default LoginScreen;\n","import { v4 as uuidV4 } from 'uuid';\n\nimport users from './users.json';\n\nexport function login(data) {\n  let authUser = null;\n  const user = users.find(user => user.username === data.username);\n\n  if (user && user.password === data.password) {\n    authUser = {\n      username: user.username,\n      token: uuidV4(),\n    };\n  }\n  else {\n    authUser = null;\n  }\n  return authUser;\n}\n\nexport function getUser() {\n  return users[0];\n}\n","import { Switch, Route } from 'react-router-dom';\n\nimport { FavoriteScreens, SearchScreen, LoginScreen } from '../screens';\nimport { useRouteGuard } from './useRouteGuard';\n\nexport const RouterView = () => {\n  useRouteGuard();\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        component={SearchScreen}\n      />\n\n      <Route\n        path=\"/saved\"\n        component={FavoriteScreens}\n      />\n\n      <Route\n        exact\n        path=\"/favourite\"\n        component={FavoriteScreens}\n      />\n\n      <Route\n        exact\n        path=\"/login\"\n        component={LoginScreen}\n      />\n\n      <Route path=\"*\">\n        <div>404 Not Found</div>\n      </Route>\n    </Switch>\n  );\n};\n","import { useLocation, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport const useRouteGuard = () => {\n\n  const { pathname } = useLocation();\n  const routeHistory = useHistory();\n  const { isLoggedIn } = useSelector(state => state.user);\n\n  if (!isLoggedIn && pathname !== '/login') {\n    routeHistory.push('/login');\n  }\n\n  return null;\n};\n","import { useEffect } from 'react';\nimport { RouterView } from './router';\nimport { Header } from './components';\nimport { Layout, Row, Col } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setSavedFavorites } from './store/favoritesSlice';\n\nfunction App() {\n  const reduxDispatch = useDispatch();\n  const { isLoggedIn } = useSelector(state => state.user);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const user = localStorage.getItem('authUser');\n      const favorites = localStorage.getItem(user);\n      if (favorites) {\n        reduxDispatch(setSavedFavorites(JSON.parse(favorites)));\n      }\n    }\n  }, [reduxDispatch, isLoggedIn]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      {isLoggedIn && (\n        <Layout.Header style={{ background: '#ffffff', padding: 0, height: 78 }}>\n          <Row justify=\"center\">\n            <Col\n              xs={{ span: 23 }}\n              sm={{ span: 22 }}\n              md={{ span: 22 }}\n              lg={{ span: 20 }}\n              xxl={{ span: 16 }}\n            >\n              <Header />\n            </Col>\n          </Row>\n        </Layout.Header>\n      )}\n\n      <Layout.Content style={{ marginTop: 20, minHeight: '100vh' }}>\n        <RouterView />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport videoSlice from './videoSlice';\nimport userSlice from './userSlice';\nimport favoritesSlice from './favoritesSlice';\n\nexport default configureStore({\n  reducer: {\n    youtubeSearch: videoSlice,\n    user: userSlice,\n    favorites: favoritesSlice,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listname\":\"VideoListTitle_listname__2iNIh\",\"listicons\":\"VideoListTitle_listicons__DyN9H\",\"listiconsItem\":\"VideoListTitle_listiconsItem__1cvmU\",\"listnameleft\":\"VideoListTitle_listnameleft__3VO-V\",\"listnametext\":\"VideoListTitle_listnametext__33j5j\",\"listnamequery\":\"VideoListTitle_listnamequery__Na_1J\",\"listnametotalcount\":\"VideoListTitle_listnametotalcount__25yTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videocontainer\":\"VideoCard_videocontainer__3MCge\",\"aboutvideo\":\"VideoCard_aboutvideo__2f3xK\",\"videotitle\":\"VideoCard_videotitle__2teoo\",\"videodescripton\":\"VideoCard_videodescripton__2rWkX\"};"],"sourceRoot":""}